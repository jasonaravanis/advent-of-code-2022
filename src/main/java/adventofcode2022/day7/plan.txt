1) take input and separate by each line

each line can be one of the following types:

* COMMAND (starts with $)
* OUTPUT (starts with dir or a file size number)

Each command be one of the following types:

* CHANGE DIRECTORY
    * to home /
    * to subdirectory xyz
    * to parent directory ..
* LIST CURRENT DIRECTORY CONTENTS (ls)

2) create a data structure made of nodes, where each node has a single parent and can have multiple child nodes


a File has a size and a name

use a Folder class
a Folder can have a parent folder (or it's null in the case of the root directory)
Use a double linked list i.e each folder knows its parent as well as all its children.
* there is a single list of FolderItem, which both File and Folder extend.
    * FolderItem is abstract.
    * FolderItem has a method called getSize(). so both File and Folder must implement getSize();
    * the logic of getSize is described in step 5.




3) create a piece of state that remembers:
    * what Folder path we are currently examining (currentDirectoryPath).


4) for an input line

if the line is "$ cd /"
    reset current directory path
if the line is "$ cd xyz"
    append "/xyz" to currentDirectoryPath
if the line is "$ cd .."
    remove the last part of the currentDirectoryPath
if the line is "$ ls"
    do nothing, go to next line
if the line is "dir xyz"
    we create a new Folder with the name xyz and add it as a child of the folder at the currentDirectoryPath
if the line is "1234 abc.anything"
    we create a new File with the name abc and add it as a child of the folder at the currentDirectoryPath




5b) After we have loaded all the data in the folder tree, we can solve by:

    * create an array to hold sizes of all Folders that have a size smaller than 100000 called SMALL_FOLDER_SIZES
        * we only need one array, but it needs to be available to all Folder objects
        * so we can use a Singleton for this
    * call getSize on the root folder
    * within the implementation of getSize on Folder class
       * get the size of the folder by calling getSize on every element in FolderItem array in the Folder
           * this is recursive
           * terminal case is we get the size of the folder based on the sum of the size of its children, where its children are only Files
               * if the total size of folder is less than 100000, add the total folder size to the SMALL_FOLDER_SIZES static array
               * then return the size value so it can be used in parent folder calculation

    * get the sum of the folder sizes from the array